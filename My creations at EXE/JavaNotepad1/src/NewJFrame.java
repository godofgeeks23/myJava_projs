
import java.awt.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.text.Document;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Aakash
 */
public class NewJFrame extends javax.swing.JFrame {
Object vfont = "Arial";
Object vfont_size = 12;
String font;
int size = 12;
int saved_status = 0;
int enter_counts = 1;
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame()  {
        initComponents();
        jEditorPane1.setFont(new Font("Arial", Font.PLAIN, 12));
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem10 = new javax.swing.JMenuItem();
        jDialog1 = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser();
        jDialog2 = new javax.swing.JDialog();
        jFileChooser2 = new javax.swing.JFileChooser();
        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        toolbar_new = new javax.swing.JButton();
        toolbar_save = new javax.swing.JButton();
        toolbar_exit = new javax.swing.JButton();
        toolbar_copy = new javax.swing.JButton();
        toolbar_cut = new javax.swing.JButton();
        toolbar_paste = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        toolbar_fontType = new javax.swing.JComboBox();
        jToolBar3 = new javax.swing.JToolBar();
        toolbar_fontSize = new javax.swing.JComboBox();
        jToolBar4 = new javax.swing.JToolBar();
        toolbar_bold = new javax.swing.JButton();
        toolbar_italic = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        file_new = new javax.swing.JMenuItem();
        file_open = new javax.swing.JMenuItem();
        file_save = new javax.swing.JMenuItem();
        file_saveAs = new javax.swing.JMenuItem();
        file_exit = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        edit_copy = new javax.swing.JMenuItem();
        edit_cut = new javax.swing.JMenuItem();
        edit_paste = new javax.swing.JMenuItem();
        edit_formatMenu = new javax.swing.JMenu();
        edit_format_font = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        tools_readyMade = new javax.swing.JMenuItem();
        tools_clipboard = new javax.swing.JMenuItem();
        tools_settings = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        help_newFeatures = new javax.swing.JMenuItem();
        help_about = new javax.swing.JMenuItem();

        jMenuItem10.setText("jMenuItem10");

        jDialog1.setTitle("Save as...");

        jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jFileChooser2.setDialogTitle("Open...");
        jFileChooser2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addComponent(jFileChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addComponent(jFileChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Writepad");
        setBackground(new java.awt.Color(0, 0, 0));
        setIconImage(null);
        setIconImages(null);

        jToolBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jToolBar1.setRollover(true);
        jToolBar1.setBorderPainted(false);
        jToolBar1.setMinimumSize(new java.awt.Dimension(354, 40));
        jToolBar1.setPreferredSize(new java.awt.Dimension(855, 40));

        jButton2.setEnabled(false);
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);

        toolbar_new.setIcon(new javax.swing.ImageIcon(getClass().getResource("/new.png"))); // NOI18N
        toolbar_new.setFocusable(false);
        toolbar_new.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbar_new.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbar_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbar_newActionPerformed(evt);
            }
        });
        jToolBar1.add(toolbar_new);

        toolbar_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        toolbar_save.setFocusable(false);
        toolbar_save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbar_save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbar_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbar_saveActionPerformed(evt);
            }
        });
        jToolBar1.add(toolbar_save);

        toolbar_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.png"))); // NOI18N
        toolbar_exit.setFocusable(false);
        toolbar_exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbar_exit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(toolbar_exit);

        toolbar_copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/copy.png"))); // NOI18N
        toolbar_copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbar_copyActionPerformed(evt);
            }
        });
        jToolBar1.add(toolbar_copy);

        toolbar_cut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cut.png"))); // NOI18N
        toolbar_cut.setFocusable(false);
        toolbar_cut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbar_cut.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbar_cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbar_cutActionPerformed(evt);
            }
        });
        jToolBar1.add(toolbar_cut);

        toolbar_paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paste.png"))); // NOI18N
        toolbar_paste.setFocusable(false);
        toolbar_paste.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbar_paste.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbar_paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbar_pasteActionPerformed(evt);
            }
        });
        jToolBar1.add(toolbar_paste);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        toolbar_fontType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Arial", "Algerian", "Bodoni MT", "Bradley Hand ITC", "Broadway", "Castellar", "Chiller", "Payrus", "Webdings" }));
        toolbar_fontType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                toolbar_fontTypeItemStateChanged(evt);
            }
        });
        toolbar_fontType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbar_fontTypeActionPerformed(evt);
            }
        });
        jToolBar2.add(toolbar_fontType);

        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);

        toolbar_fontSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "4", "8", "12", "14", "24", "36", "40", "65", "72", "100" }));
        toolbar_fontSize.setSelectedIndex(2);
        toolbar_fontSize.setSelectedItem(4);
        toolbar_fontSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbar_fontSizeActionPerformed(evt);
            }
        });
        jToolBar3.add(toolbar_fontSize);

        jToolBar4.setFloatable(false);
        jToolBar4.setRollover(true);

        toolbar_bold.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bold.png"))); // NOI18N
        toolbar_bold.setFocusable(false);
        toolbar_bold.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbar_bold.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbar_bold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbar_boldActionPerformed(evt);
            }
        });
        jToolBar4.add(toolbar_bold);

        toolbar_italic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/italic.png"))); // NOI18N
        toolbar_italic.setFocusable(false);
        toolbar_italic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbar_italic.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbar_italic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbar_italicActionPerformed(evt);
            }
        });
        jToolBar4.add(toolbar_italic);

        jEditorPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jEditorPane1MouseClicked(evt);
            }
        });
        jEditorPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jEditorPane1KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jEditorPane1);

        jLabel1.setText("Details of the current document:");

        jLabel2.setText("Name:");

        jLabel3.setText("Size:");

        jLabel4.setText("Location:");

        jLabel5.setText("Status:");

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 0));
        jMenuBar1.setBorderPainted(false);
        jMenuBar1.setPreferredSize(new java.awt.Dimension(56, 26));

        fileMenu.setText("File");

        file_new.setIcon(new javax.swing.ImageIcon(getClass().getResource("/new.png"))); // NOI18N
        file_new.setText("New");
        file_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_newActionPerformed(evt);
            }
        });
        fileMenu.add(file_new);

        file_open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/open.png"))); // NOI18N
        file_open.setText("Open");
        file_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_openActionPerformed(evt);
            }
        });
        fileMenu.add(file_open);

        file_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        file_save.setText("Save");
        file_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_saveActionPerformed(evt);
            }
        });
        fileMenu.add(file_save);

        file_saveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        file_saveAs.setText("Save As...");
        file_saveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_saveAsActionPerformed(evt);
            }
        });
        fileMenu.add(file_saveAs);

        file_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.png"))); // NOI18N
        file_exit.setText("Exit");
        file_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_exitActionPerformed(evt);
            }
        });
        fileMenu.add(file_exit);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");

        edit_copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/copy.png"))); // NOI18N
        edit_copy.setText("Copy");
        edit_copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_copyActionPerformed(evt);
            }
        });
        editMenu.add(edit_copy);

        edit_cut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cut.png"))); // NOI18N
        edit_cut.setText("Cut");
        edit_cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_cutActionPerformed(evt);
            }
        });
        editMenu.add(edit_cut);

        edit_paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paste.png"))); // NOI18N
        edit_paste.setText("Paste");
        editMenu.add(edit_paste);

        edit_formatMenu.setText("Format");

        edit_format_font.setText("Font");
        edit_formatMenu.add(edit_format_font);

        editMenu.add(edit_formatMenu);

        jMenuBar1.add(editMenu);

        toolsMenu.setText("Tools");

        tools_readyMade.setText("Ready Made Formats");
        toolsMenu.add(tools_readyMade);

        tools_clipboard.setText("Clipboard");
        toolsMenu.add(tools_clipboard);

        tools_settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/settings.png"))); // NOI18N
        tools_settings.setText("Writepad settings...");
        toolsMenu.add(tools_settings);

        jMenuBar1.add(toolsMenu);

        helpMenu.setText("Help");

        help_newFeatures.setText("New features...");
        helpMenu.add(help_newFeatures);

        help_about.setText("About");
        helpMenu.add(help_about);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 387, Short.MAX_VALUE))
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(303, 303, 303)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToolBar3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void toolbar_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbar_copyActionPerformed
    jEditorPane1.copy();
    }//GEN-LAST:event_toolbar_copyActionPerformed

    private void file_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_saveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_file_saveActionPerformed

    private void toolbar_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbar_newActionPerformed

    }//GEN-LAST:event_toolbar_newActionPerformed

    private void edit_cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_cutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edit_cutActionPerformed
    private void edit_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_copyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edit_copyActionPerformed

    private void toolbar_fontTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbar_fontTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolbar_fontTypeActionPerformed

    private void toolbar_boldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbar_boldActionPerformed
jEditorPane1.setFont(new Font(font , Font.BOLD, size));  
    }//GEN-LAST:event_toolbar_boldActionPerformed

    private void file_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_exitActionPerformed
if(saved_status == 0){ 
        System.exit(0);
}
else{
    int result = JOptionPane.showConfirmDialog(null, "The file has not been saved, do you want to save it now ?", "File not saved", 1);
if(result == JOptionPane.YES_OPTION){
    jDialog1.setVisible(true);
    jDialog1.pack();
}
else if(result == JOptionPane.NO_OPTION){
    System.exit(0);
}
else if(result == JOptionPane.CANCEL_OPTION){
    
}
}
    }//GEN-LAST:event_file_exitActionPerformed

    private void toolbar_italicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbar_italicActionPerformed
jEditorPane1.setFont(new Font(font , Font.ITALIC, size));          // TODO add your handling code here:
    }//GEN-LAST:event_toolbar_italicActionPerformed

    private void toolbar_fontSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbar_fontSizeActionPerformed
vfont_size = toolbar_fontSize.getSelectedItem();
String temp = vfont_size.toString();
size = Integer.parseInt(temp);
jEditorPane1.setFont(new Font(font , Font.PLAIN, size));  
    }//GEN-LAST:event_toolbar_fontSizeActionPerformed

    private void toolbar_fontTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_toolbar_fontTypeItemStateChanged
vfont = toolbar_fontType.getSelectedItem();
font = vfont.toString();
jEditorPane1.setFont(new Font(font , Font.PLAIN, size));  
    }//GEN-LAST:event_toolbar_fontTypeItemStateChanged

    private void toolbar_cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbar_cutActionPerformed
jEditorPane1.cut();        // TODO add your handling code here:
    }//GEN-LAST:event_toolbar_cutActionPerformed

    private void toolbar_pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbar_pasteActionPerformed
jEditorPane1.paste();        // TODO add your handling code here:
    }//GEN-LAST:event_toolbar_pasteActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
String action = (evt.getActionCommand());
if(action.equals("CancelSelection")) {
  
}
if(action.equals("ApproveSelection")) {
    File f;
    f = jFileChooser1.getCurrentDirectory();
    String cr = f.toString();
    System.out.println(cr);
    String filename = JOptionPane.showInputDialog("Enter file name:");
         PrintWriter writer; 
try { 
writer = new PrintWriter((filename+".txt"), "UTF-8"); 
writer.print(jEditorPane1.getText());  
writer.close(); 
       File source = new File("C:/Users/Aakash/Documents/NetBeansProjects/JavaNotepad1/"+(filename)+".txt");
       File dest = new File((f+"/"+(filename+".txt")));
Files.copy(source.toPath(), dest.toPath());
}
catch(Exception ex){}
}        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void file_saveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_saveAsActionPerformed
    jDialog1.setVisible(true);
    jDialog1.pack();
    }//GEN-LAST:event_file_saveAsActionPerformed

    private void toolbar_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbar_saveActionPerformed
    jDialog1.setVisible(true);
    jDialog1.pack();
    }//GEN-LAST:event_toolbar_saveActionPerformed

    private void file_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_newActionPerformed
if(saved_status == 0){
   saved_status = 1; 
}
else{
    int result = JOptionPane.showConfirmDialog(null, "The file has not been saved, do you want to save it now ? ", "File not saved", 1);
if(result == JOptionPane.YES_OPTION){
    jDialog1.setVisible(true);
    jDialog1.pack();
    jEditorPane1.setText("");
    saved_status = 1;
}
else if(result == JOptionPane.NO_OPTION){
    saved_status = 0;
   jEditorPane1.setText("");
}
else if(result == JOptionPane.CANCEL_OPTION){

}
}
    }//GEN-LAST:event_file_newActionPerformed

    private void jFileChooser2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser2ActionPerformed
 String action = evt.getActionCommand();
ArrayList li = new ArrayList();
  if(action.equals("ApproveSelection")){
     File ope = jFileChooser2.getSelectedFile();
     Charset charset = Charset.forName("US-ASCII");
try (BufferedReader reader = Files.newBufferedReader(ope.toPath(), charset)) {
    String line = null;
    while ((line = reader.readLine()) != null) {  
      li.add(line);
      
    }
} catch (IOException x) {
    System.err.format("IOException: %s%n", x);
}
for(int i=0; (i<=li.size()-1); i=i+1){
  jEditorPane1.setText(jEditorPane1.getText()+ (li.get(i))+"\n");
}
  }
    }//GEN-LAST:event_jFileChooser2ActionPerformed

    private void file_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_openActionPerformed
jDialog2.setVisible(true);
jDialog2.pack();
    }//GEN-LAST:event_file_openActionPerformed

    private void jEditorPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jEditorPane1MouseClicked


    }//GEN-LAST:event_jEditorPane1MouseClicked

    private void jEditorPane1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jEditorPane1KeyPressed
if(evt.getKeyCode()==10){
        enter_counts = enter_counts+1;
System.out.println("Number of lines ="+enter_counts);
int location_x = enter_counts;
int location_y = jEditorPane1.getCaretPosition();
System.out.println(location_x+","+location_y);
}
    }//GEN-LAST:event_jEditorPane1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem edit_copy;
    private javax.swing.JMenuItem edit_cut;
    private javax.swing.JMenu edit_formatMenu;
    private javax.swing.JMenuItem edit_format_font;
    private javax.swing.JMenuItem edit_paste;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem file_exit;
    private javax.swing.JMenuItem file_new;
    private javax.swing.JMenuItem file_open;
    private javax.swing.JMenuItem file_save;
    private javax.swing.JMenuItem file_saveAs;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem help_about;
    private javax.swing.JMenuItem help_newFeatures;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JButton toolbar_bold;
    private javax.swing.JButton toolbar_copy;
    private javax.swing.JButton toolbar_cut;
    private javax.swing.JButton toolbar_exit;
    private javax.swing.JComboBox toolbar_fontSize;
    private javax.swing.JComboBox toolbar_fontType;
    private javax.swing.JButton toolbar_italic;
    private javax.swing.JButton toolbar_new;
    private javax.swing.JButton toolbar_paste;
    private javax.swing.JButton toolbar_save;
    private javax.swing.JMenu toolsMenu;
    private javax.swing.JMenuItem tools_clipboard;
    private javax.swing.JMenuItem tools_readyMade;
    private javax.swing.JMenuItem tools_settings;
    // End of variables declaration//GEN-END:variables
}
